local succ, err = pcall(function()
	require = loadstring(game:GetObjects("rbxassetid://967517547")[1].Source)()
	local theKey = require(10759199334)
	local isPremium = false
	local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
	local Window = nil
	local player = game.Players.LocalPlayer
	local adminIds = {85430711, 267468570, 70433390, 75027435, 69246543, 72978317, 375454798, 34309522, 31856449}
	local synapse = false

	local Name = "SkrillexHubDBZFR.JSON"

	local DefaultSettings = {
		AutoDragonBall = false,
		autoDragonBallsServerHop = false,
		WebHook = nil
	}

	local Settings

	if not pcall(function() readfile(Name) end) then writefile(Name, game:service'HttpService':JSONEncode(DefaultSettings)) end

	Settings = game:service'HttpService':JSONDecode(readfile(Name))

	local function Save()
		writefile(Name,game:service'HttpService':JSONEncode(Settings))
	end

	local queue_on_teleport =
		queue_on_teleport or
		syn and
		syn.queue_on_teleport [[
       repeat wait() until game:IsLoaded() wait(5) print("ServerHoped or rejoined")
       loadstring(game:HttpGet(('https://raw.githubusercontent.com/IAmTheRealOne/SkrillexHubFree/main/' .. game.GameId)))()
   ]]

	if syn then

		synapse = true

		local OldNameCall 
		OldNameCall = hookmetamethod(game, "__namecall", function(...) 
			local Self, Args = (...), ({select(2, ...)})

			if getnamecallmethod() == "Kick" and Self == Player then 
				return
			end

			return OldNameCall(...)
		end)

	end

	function checkAdmin(plr)

		if table.find(adminIds, plr.UserId) then

			return true

		else

			return false

		end

	end

	if theKey.CheckPaid(game.Players.LocalPlayer) == true then

		Window = OrionLib:MakeWindow({Name = "Azure Hub - Dragon Ball Final Remastered", HidePremium = false, SaveConfig = true, ConfigFolder = "SkrillexHub", IntroText = "Skrillex Hub Premium"})
		isPremium = true

	else

		Window = OrionLib:MakeWindow({Name = "Azure Hub - Dragon Ball Final Remastered", HidePremium = true, SaveConfig = true, ConfigFolder = "SkrillexHub", IntroText = "Skrillex Hub"})


	end

	local players = game.Players


	if syn then
		local mt = getrawmetatable(game)
		make_writeable(mt)

		local namecall = mt.__namecall

		mt.__namecall = newcclosure(function(self, ...)
			local method = getnamecallmethod()
			local args = {...}

			if method == "FireServer" and tostring(self) == "BanRemote" then
				return
			end
			return namecall(self, table.unpack(args))
		end)
	end

	local PlaceID = game.PlaceId
	local AllIDs = {}
	local foundAnything = ""
	local actualHour = os.date("!*t").hour
	local Deleted = false
	local File = pcall(function()
		AllIDs = game:GetService('HttpService'):JSONDecode(readfile("NotSameServers.json"))
	end)
	if not File then
		table.insert(AllIDs, actualHour)
		writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
	end
	function TPReturner()
		local Site;
		if foundAnything == "" then
			Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
		else
			Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
		end
		local ID = ""
		if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
			foundAnything = Site.nextPageCursor
		end
		local num = 0;
		for i,v in pairs(Site.data) do
			local Possible = true
			ID = tostring(v.id)
			if tonumber(v.maxPlayers) > tonumber(v.playing) then
				for _,Existing in pairs(AllIDs) do
					if num ~= 0 then
						if ID == tostring(Existing) then
							Possible = false
						end
					else
						if tonumber(actualHour) ~= tonumber(Existing) then
							local delFile = pcall(function()
								delfile("NotSameServers.json")
								AllIDs = {}
								table.insert(AllIDs, actualHour)
							end)
						end
					end
					num = num + 1
				end
				if Possible == true then
					table.insert(AllIDs, ID)
					wait()
					pcall(function()
						writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
						wait()
						game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
					end)
					wait(4)
				end
			end
		end
	end

	function Teleport()
		while wait() do
			pcall(function()
				TPReturner()
				if foundAnything ~= "" then
					TPReturner()
				end
			end)
		end
	end


	local vim = game:GetService("VirtualInputManager")
	local player = game.Players.LocalPlayer
	local hum = player.Character:WaitForChild("Humanoid")
	local healing = false
	local data = player:WaitForChild("Data")
	local power = data.Power

	local autKey = false
	local autMediate

	local TweenService = game:GetService("TweenService")

	local camera = workspace.CurrentCamera
	local tweenInfo = TweenInfo.new(
		0.5, Enum.EasingStyle.Linear, Enum.EasingDirection.Out
	)


	local UIS = game:GetService("UserInputService")

	if Settings.WebHook ~= nil then

		OrionLib:MakeNotification({
			Name = "Skrillex Hub",
			Content = "Current Webhook: " .. Settings.WebHook,
			Image = "rbxassetid://4483345998",
			Time = 5
		})

	end

	local Tab = Window:MakeTab({
		Name = "Auto Farm",
		Icon = "rbxassetid://4483345998",
		PremiumOnly = false
	})

	local Section = Tab:AddSection({
		Name = "Stats"
	})

	local ShadowTrainFarm = false
	local ShadowTrainWait = 0
	local autoDragonBallsServerHop = false
	if isPremium == false then

		local PLFarm = Tab:AddToggle({
			Name = "PL Farm (High ban chance)",
			Default = false,
			Callback = function(Value)
				local Pos1 = player.Character.HumanoidRootPart.Position.Y
				if Pos1 >= 70000 then

					ShadowTrainFarm = Value

				else

					if Value == true then

						OrionLib:MakeNotification({
							Name = "Skrillex Hub",
							Content = "Teleport To Safe Place First",
							Image = "rbxassetid://4483345998",
							Time = 5
						})

					end   
				end
			end    
		})

		Tab:AddSlider({
			Name = "Fast PL Settings",
			Min = 0.15,
			Max = 1,
			Default = 0,
			Color = Color3.fromRGB(255,255,255),
			Increment = 0.01,
			ValueName = "Seconds Between Hits",
			Callback = function(Value)
				ShadowTrainWait = Value
			end    
		})


	end

	Tab:AddToggle({
		Name = "Auto Meditation (Put the manual one)",
		Default = false,
		Callback = function(Value)
			autMediate = Value
		end    
	})

	Tab:AddToggle({
		Name = "Auto Gravity Chamber",
		Default = false,
		Callback = function(Value)
			autKey = Value
		end    
	})

	local KillAuraWait = 0
	local maxDistance = 15
	local KillAura = false
	local firstTimeKillAura = false
	local killauraToggle = Tab:AddToggle({
		Name = "Kill Aura (Low Chance Of Kick)",
		Default = false,
		Callback = function(Value)
			KillAura = Value

			if firstTimeKillAura == false and Value == true then
				firstTimeKillAura = true
				OrionLib:MakeNotification({
					Name = "Skrillex Hub",
					Content = "There is a little chance of you getting kicked",
					Image = "rbxassetid://4483345998",
					Time = 5
				})

			end
		end    
	})

	Tab:AddSlider({
		Name = "Kill Aura Speed",
		Min = 0.05,
		Max = 1,
		Default = 0,
		Color = Color3.fromRGB(255,255,255),
		Increment = 0.01,
		ValueName = "Seconds",
		Callback = function(Value)
			KillAuraWait = Value
		end    
	})

	Tab:AddSlider({
		Name = "Kill Aura Distance",
		Min = 5,
		Max = 15,
		Default = 10,
		Color = Color3.fromRGB(255,255,255),
		Increment = 1,
		ValueName = "Meters",
		Callback = function(Value)
			maxDistance = Value
		end    
	})

	local keyPressSpeed = 0
	Tab:AddSlider({
		Name = "Auto Gravity Chamber Speed",
		Min = 0,
		Max = 1,
		Default = 0.1,
		Color = Color3.fromRGB(255,255,255),
		Increment = 0.01,
		ValueName = "Seconds",
		Callback = function(Value)
			keyPressSpeed = Value
		end    
	})
	
	
	local oldPos = nil
	local safePartSize = nil
	Tab:AddToggle({
		Name = "Safe Place",
		Default = false,
		Callback = function(Value)
			if Value == true then

				local part = Instance.new("Part", game.Workspace)
				part.Name = "SafePart"
				part.Anchored = true
				part.Position = Vector3.new(math.random(10000, 20000), 80000, math.random(10000, 100000))
				oldPos = player.Character.HumanoidRootPart.CFrame
				player.Character.HumanoidRootPart.CFrame = part.CFrame * CFrame.new(0, 10, 0)
				if safePartSize == nil then

					part.Size = Vector3.new(500, 25, 500)

				else

					part.Size = Vector3.new(safePartSize, 10 + (safePartSize * 0.05) , safePartSize)

				end

			elseif Value == false and game.Workspace:FindFirstChild("SafePart") then

				game.Workspace.SafePart:Destroy()
				player.Character.HumanoidRootPart.CFrame = oldPos


			end
		end    
	})

	local InfStam = false
	Tab:AddToggle({
		Name = "Infinite Stamina",
		Default = false,
		Callback = function(Value)
			InfStam = Value
		end    
	})

	local InfKi = false
	Tab:AddToggle({
		Name = "Infinite Ki",
		Default = false,
		Callback = function(Value)
			InfKi = Value
		end    
	})

	local FastPunch = true
	local PunchingSpeed = 0
	Tab:AddToggle({
		Name = "Fast Punch",
		Default = false,
		Callback = function(Value)
			PunchingSpeed = Value

			if Value == false then

				player.Data.CombatSpeed.Value = 0

			end
		end    
	})

	Tab:AddSlider({
		Name = "Fast Punch Settings",
		Min = 0,
		Max = 100,
		Default = 0,
		Color = Color3.fromRGB(255,255,255),
		Increment = 1,
		ValueName = "Speed",
		Callback = function(Value)
			PunchingSpeed = Value
		end    
	})

	local EspActivated = false
	local EspClicked = false
	Tab:AddButton({
		Name = "Esp (Fates Esp)",
		Callback = function()
			if EspActivated == false then
				EspActivated = true
				OrionLib:MakeNotification({
					Name = "Skrillex Hub",
					Content = "Fates Esp Open",
					Image = "rbxassetid://4483345998",
					Time = 5
				})
			end    
			loadstring(game:HttpGet('https://raw.githubusercontent.com/fatesc/fates-esp/main/main.lua'))()

		end    
	})

	local Tab = Window:MakeTab({
		Name = "Teleports",
		Icon = "rbxassetid://4483345998",
		PremiumOnly = false
	})

	local Section = Tab:AddSection({
		Name = "Npc"
	})

	for _, v in pairs(game.Workspace:GetDescendants()) do

		if v:FindFirstChild("HumanoidRootPart") and not game.Players:FindFirstChild(v.Name) and not v:FindFirstChild("Humanoid") and v.Name ~= "Keyframe" then

			Tab:AddButton({
				Name = v.Name,
				Callback = function()
					player.Character.HumanoidRootPart.CFrame = v:FindFirstChild("HumanoidRootPart").CFrame
				end    
			})

		end 

	end

	local isTeleporting = false

	local Tab = Window:MakeTab({
		Name = "Maps Teleport",
		Icon = "rbxassetid://4483345998",
		PremiumOnly = false
	})

	Tab:AddButton({
		Name = "Earth",
		Callback = function()
			isTeleporting = true
			task.wait(1)
			game:GetService("TeleportService"):Teleport(298400657, player)
		end    
	})

	Tab:AddButton({
		Name = "Otherworld",
		Callback = function()
			isTeleporting = true
			task.wait(1)
			game:GetService("TeleportService"):Teleport(4263492467, player)
		end    
	})

	Tab:AddButton({
		Name = "Namek (3000+ Strength)",
		Callback = function()
			isTeleporting = true
			task.wait(1)
			game:GetService("TeleportService"):Teleport(4761949056, player)
		end    
	})

	Tab:AddButton({
		Name = "Gravity Chamber (2500+ Strength)",
		Callback = function()
			isTeleporting = true
			task.wait(1)
			game:GetService("TeleportService"):Teleport(5798060869, player)
		end    
	})

	local strengthSelected = nil
	local defenseSelected = nil
	local dropdown = nil
	local dropdown2 = nil
	local webhook = nil
	local playerToKill = nil
	local autoDragonBalls = false
	local PlayersKillAura = false	
	local UltraShadowTrainFarm = false
	local timer = nil
	local dropdown3 = nil
	local timeToNotify = ""
	local nextTimeNotifyAt = nil

	if Settings.WebHook ~= nil then

		webhook = Settings.WebHook

	end

	function Webhook(message, title)

		print(webhook)
		if title == nil then

			title = "Skrillex Hub Bot"

		end

		local url =
			webhook
		local data = {
			["content"] = "",
			["embeds"] = {
				{
					["title"] = title,
					["description"] = message,
					["type"] = "rich",
					["color"] = tonumber(0x7269da),
					["image"] = {
						["url"] = "http://www.roblox.com/Thumbs/Avatar.ashx?x=150&y=150&Format=Png&username=" ..
							tostring(game:GetService("Players").LocalPlayer.Name)
					}
				}
			}
		}
		local newdata = game:GetService("HttpService"):JSONEncode(data)

		local headers = {
			["content-type"] = "application/json"
		}
		request = http_request or request or HttpPost or syn.request
		local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
		request(abcdef)

	end

	if isPremium == true then

		local Tab = Window:MakeTab({
			Name = "Paid",
			Icon = "rbxassetid://4483345998",
			PremiumOnly = false
		})

		Tab:AddToggle({
			Name = "Fast PL Farm",
			Default = false,
			Callback = function(Value)
				ShadowTrainFarm = Value
			end    
		})

if game:GetService("RbxAnalyticsService"):GetClientId() == "AB5770D1-14A6-45E2-B5B8-14EEF4C1D233" then

		Tab:AddSlider({
			Name = "Fast PL Settings (High ban chance please dont use)",
			Min = 0,
			Max = 2,
			Default = 0,
			Color = Color3.fromRGB(255,255,255),
			Increment = 0.01,
			ValueName = "Seconds Between Hits",
			Callback = function(Value)
				ShadowTrainWait = Value
			end    
		})


else

		Tab:AddSlider({
			Name = "Fast PL Settings (High ban chance please dont use)",
			Min = 0.05,
			Max = 2,
			Default = 0,
			Color = Color3.fromRGB(255,255,255),
			Increment = 0.01,
			ValueName = "Seconds Between Hits",
			Callback = function(Value)
				ShadowTrainWait = Value
			end    
		})

end
		Tab:AddToggle({
			Name = "Players Kill Aura",
			Default = false,
			Callback = function(Value)
				PlayersKillAura = Value

				if firstTimeKillAura == false and Value == true then
					firstTimeKillAura = true
					OrionLib:MakeNotification({
						Name = "Skrillex Hub",
						Content = "There is a little chance of you getting kicked",
						Image = "rbxassetid://4483345998",
						Time = 5
					})

				end
			end    
		})

		Tab:AddToggle({
			Name = "Auto Dragon Balls",
			Default = Settings.AutoDragonBall,
			Callback = function(Value)
				autoDragonBalls = Value
				Settings.AutoDragonBall = Value
				Save()
			end    
		})

		Tab:AddButton({
			Name = "Dragon Ball ServerHop",
			Callback = function(Value)
				if game:GetService("Workspace"):FindFirstChild("DragonBallLocatioionsa") and #game:GetService("Workspace"):FindFirstChild("DragonBallLocatioionsa"):GetChildren() >0 then

					OrionLib:MakeNotification({
						Name = "Skrillex Hub",
						Content = "There is a dragon ball!",
						Image = "rbxassetid://4483345998",
						Time = 5
					})

				else		

					isTeleporting = true
					task.wait(1)						
					Teleport()
				end
			end
		})

		Tab:AddDropdown({
			Name = "Type",
			Default = "",
			Options = {"None", "Notify", "Webhook", "Kick"},
			Callback = function(Value)
				dropdown = Value
			end    
		})

		Tab:AddTextbox({
			Name = "Strength",
			Default = power.Value + 10000,
			TextDisappear = false,
			Callback = function(Value)
				strengthSelected = tonumber(Value)
			end	  
		})

		Tab:AddTextbox({
			Name = "Webhook (Only With Webhook Type)",
			Default = "",
			TextDisappear = true,
			Callback = function(Value)
				webhook = Value
				OrionLib:MakeNotification({
					Name = "Skrillex Hub",
					Content = "Sended Message To Test",
					Image = "rbxassetid://4483345998",
					Time = 5
				})
				Webhook("Testing Webhook", nil)
				Settings.WebHook = Value
				Save()
			end	  
		})
		power.Changed:Connect(function()
			if power.Value >= strengthSelected then

				if dropdown == "Notify" then

					local audio = Instance.new("Sound", game.Workspace)
					audio.SoundId = "rbxassetid://835068435"
					audio.Volume = 10
					audio:Play()

					OrionLib:MakeNotification({
						Name = "Skrillex Hub",
						Content = "You Reached " .. strengthSelected .. "+" .. " Strength",
						Image = "rbxassetid://4483345998",
						Time = 5
					})

				elseif dropdown == "Webhook" then

					Webhook("You Reached " .. strengthSelected .. "+" .. " Strength", nil)

				elseif dropdown == "Kick" then

					player:Kick("You Reached " .. strengthSelected .. "+" .. " Strength")

				end
			end
		end)

		local Tab = Window:MakeTab({
			Name = "Paid 2",
			Icon = "rbxassetid://4483345998",
			PremiumOnly = false
		})

		Tab:AddDropdown({
			Name = "Admin Detect",
			Default = "Kick",
			Options = {"None", "Kick", "Notify", "Webhook"},
			Callback = function(Value)
				dropdown2 = Value
			end    
		})

		Tab:AddTextbox({
			Name = "Webhook (Only With Webhook Type)",
			Default = "",
			TextDisappear = true,
			Callback = function(Value)
				webhook = Value
				OrionLib:MakeNotification({
					Name = "Skrillex Hub",
					Content = "Sended Message To Test",
					Image = "rbxassetid://4483345998",
					Time = 5
				})
				Webhook("Testing Webhook", nil)
				Settings.WebHook = Value
				Save()
			end	  
		})

		local killPlayerV = false
		local firstTimeKillPlayer = false

		Tab:AddButton({
			Name = "Teleport To Player",
			Callback = function(Value)

				if playerToKill ~= nil and game.Players:FindFirstChild(playerToKill) then

					player.Character.HumanoidRootPart.CFrame = game.Players:FindFirstChild(playerToKill).Character.HumanoidRootPart.CFrame

				else

					OrionLib:MakeNotification({
						Name = "Skrillex Hub",
						Content = "Player: " .. "[" .. playerToKill .. "]" .. " Not Found",
						Image = "rbxassetid://4483345998",
						Time = 5
					})

				end

			end    
		})

		Tab:AddToggle({
			Name = "Spectate Player",
			Default = false,
			Callback = function(Value)

				local succ, err = pcall(function()
					if playerToKill ~= nil or game.Players:FindFirstChild(playerToKill) then

						if Value == true then

							game.Workspace.Camera.CameraSubject = game.Players:FindFirstChild(playerToKill).Character.Humanoid

						else

							game.Workspace.Camera.CameraSubject = player.Character.Humanoid

						end

					else

						OrionLib:MakeNotification({
							Name = "Skrillex Hub",
							Content = "Player: " .. "[" .. playerToKill .. "]" .. " Not Found",
							Image = "rbxassetid://4483345998",
							Time = 5
						})

					end
				end)
			end    
		})


		local killPlayer = Tab:AddToggle({
			Name = "Kill Player",
			Default = false,
			Callback = function(Value)
				killPlayerV = Value

				if firstTimeKillPlayer == false and Value == true then
					firstTimeKillPlayer = true

					OrionLib:MakeNotification({
						Name = "Skrillex Hub",
						Content = "High ban chance",
						Image = "rbxassetid://4483345998",
						Time = 5
					})

				end
			end    
		})

		local dd= Tab:AddDropdown({
			Name = "Players",
			Default = "None",
			Options = {"None"},
			Callback = function(Value)
				playerToKill = Value
			end   
		})

		local succ, err = pcall(function()
			local Skill = nil
			Tab:AddDropdown({
				Name = "Ki Skills",
				Default = "None",
				Options = {"Energy Wave", "Kamehameha", "Galick Gun", "Heat Dome Attack", "Masenko", "Death Beam", "Small Spirit Bomb", "Final Flash", "One Handed Kamehameha", "Super Black Kamehameha", "Angry Kamehameha", "Promenince Flash", "Kaioken Kamehameha", "Special Beam Cannon", "X10 Kamehameha", "Final Shine Attack", "Super Kamehameha", "Large Spirit Bomb", "Dodon Ray", "Hidden Potential", "Hyper Masenko", "Big Bang Attack", "Big Bang Kamehameha", "Instant Transmission Kamehameha", "Earth Splitting Galick Gun", "Super Energy Wave", "Destructo Disc", "Super Destructo Disc", "Ultra Big Bang Attack", "Last Emperor", "Supernova", "Tyrant Lancer", "Riot Javelin", "Prominence Kamehameha", "Final Kamehameha"},
				Callback = function(Value)
					Skill = Value
				end   
			})

			Tab:AddDropdown({
				Name = "Melee Skills",
				Default = "None",
				Options = {"Meteor Blow", "Dragon Throw", "Wild Hunt", "Senko Ki Blast", "Super God Fist", "Mystic Kick", "Raid Blast", "God Kamehameha", "Burning Slash", "Destructive Crash", "Time Skip/Molotov", "Sledge Hammer", "Meteor Combination", "Final Galick Rush", "Kiai [Evastive]", "Solar Flare [Evastive]", "Saturday Blast", "Taco Slap", "Spirit Stab", "Spirit Sword", "Punisher Drive", "Final Flash Rush", "Kaioken Attack", "Fake Death", "Wolf Fang Fist", "Neo Wolf Fang Fist", "Orin Combo", "Super Dragon Hammer"},
				Callback = function(Value)
					Skill = Value
				end   
			})

			Tab:AddDropdown({
				Name = "Boosts Skills",
				Default = "None",
				Options = {"Rise To Action", "Unlock Ki: Form Of Ki", "Spirit Saiyan", "Pressure Sign", "Full Power SSJ4", "Unlock Ki: Form Of Life", "Unlock Ki: Form Of Recovery"},
				Callback = function(Value)
					Skill = Value
				end   
			})

			Tab:AddDropdown({
				Name = "Slots",
				Default = "1",
				Options = {"1", "2", "3", "4"},
				Callback = function(Value)
					if Skill ~= nil then
						if Value == "1" then
							game:GetService("ReplicatedStorage").Remotes.KeyAttack:FireServer({Skill, 3})
						elseif Value == "3" then
							game:GetService("ReplicatedStorage").Remotes.KeyAttack:FireServer({Skill, 2})
						elseif Value == "2" then
							game:GetService("ReplicatedStorage").Remotes.KeyAttack:FireServer({Skill, 4})
						elseif Value == "4" then
							game:GetService("ReplicatedStorage").Remotes.KeyAttack:FireServer({Skill, 1})					
						end	
					end
				end   
			})

			Tab:AddButton({
				Name = "Unlock All Quests",
				Callback = function()
					for _, v in pairs(game:GetService("Workspace").Quests:GetChildren()) do

						v.LevelReq.Value = 0

					end
				end    
			})
		end)

		local playerstable = {}
		for _, v in pairs(game.Players:GetChildren()) do

			table.insert(playerstable, v.Name)

		end

		dd:Refresh(playerstable)

		players.PlayerAdded:Connect(function(plr)

			dd:Refresh(playerstable, true)

			for _, v in pairs(game.Players:GetChildren()) do

				table.insert(playerstable, v.Name)

			end

			dd:Refresh(playerstable)		

			if checkAdmin(plr) == true then

				if dropdown2 == "Webhook" then

					Webhook("Admin joined, User: " .. plr.Name .. ", UserId: " .. plr.UserId, nil)

				elseif dropdown2 == "Kick" then

					player:Kick("Admin Detected")

				end
			end
		end)

		players.PlayerRemoving:Connect(function(plr)

			dd:Refresh(playerstable, true)

			for _, v in pairs(game.Players:GetChildren()) do

				table.insert(playerstable, v.Name)

			end

			dd:Refresh(playerstable)		

		end)

		for _, v in pairs(players:GetChildren()) do

			if checkAdmin(v) == true and isPremium == true then

				if dropdown2 == "Webhook" then

					local url =
						webhook
					local data = {
						["content"] = "",
						["embeds"] = {
							{
								["title"] = "Skrillex Hub Bot",
								["description"] = "Admin joined, User: " .. v.Name .. ", UserId: " .. v.UserId ,
								["type"] = "rich",
								["color"] = tonumber(0x7269da),
								["image"] = {
									["url"] = "http://www.roblox.com/Thumbs/Avatar.ashx?x=150&y=150&Format=Png&username=" ..
										tostring(game:GetService("Players").LocalPlayer.Name)
								}
							}
						}
					}
					local newdata = game:GetService("HttpService"):JSONEncode(data)

					local headers = {
						["content-type"] = "application/json"
					}
					request = http_request or request or HttpPost or syn.request
					local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
					request(abcdef)

				elseif dropdown2 == "Kick" then

					player:Kick("Admin Detected")

				end
			end
		end

		local Tab = Window:MakeTab({
			Name = "Paid 3",
			Icon = "rbxassetid://4483345998",
			PremiumOnly = false
		})

		Tab:AddDropdown({
			Name = "Timer Notifier",
			Default = "None",
			Options = {"None", "Sound", "Webhook"},
			Callback = function(Value)
				dropdown3 = Value
			end   
		})

		Tab:AddTextbox({
			Name = "Notify At",
			Default = "",
			TextDisappear = true,
			Callback = function(Value)
				timeToNotify = Value
			end	  
		})

		timer = Tab:AddLabel("Label")

		nextTimeNotifyAt = Tab:AddLabel("0:00:00")

		Tab:AddTextbox({
			Name = "Webhook (Only With Webhook Type)",
			Default = "",
			TextDisappear = true,
			Callback = function(Value)
				webhook = Value
				OrionLib:MakeNotification({
					Name = "Skrillex Hub",
					Content = "Sended Message To Test",
					Image = "rbxassetid://4483345998",
					Time = 5
				})
				Webhook("Testing Webhook", nil)
				Settings.WebHook = Value
				Save()
			end	  
		})

		local oldCFrame = nil
		coroutine.wrap(function()
			while task.wait() do
				if isTeleporting == false then

					if game.Players:FindFirstChild(playerToKill) and killPlayerV == true then


						local plr = game.Players:FindFirstChild(playerToKill)

						if plr.Character.Humanoid.Health >= 1 then

							player.Character.HumanoidRootPart.CFrame = plr.Character.HumanoidRootPart.CFrame

							if oldCFrame == nil then

								oldCFrame = player.Character.HumanoidRootPart.CFrame

							end

							local args = {
								[1] = plr.Character,
								[2] = {
									["HitTime"] = 0,
									["Type"] = "Normal",
									["HitEffect"] = game:GetService("ReplicatedStorage").Resources.OtherEffects.NormalHitEffect2,
									["VictimCFrame"] = plr.Character.Torso.CFrame,
									["HurtAnimation"] = game:GetService("ReplicatedStorage").Resources.Animations.HurtAnimations.Hurt2,
									["Velocity"] = Vector3.new(0.01, 0.01, 0.01) --[[Vector3]],
									["Sound"] = game:GetService("ReplicatedStorage").Resources.Sounds.Combat.NormalKick,
									["Damage"] = math.huge
								}
							}

							game:GetService("ReplicatedStorage").Remotes.Damage4:InvokeServer(unpack(args))
							if plr.Character.Humanoid.Health <= 0 then

								killPlayer:Set(false)
								task.wait(1)
								player.Character.HumanoidRootPart.CFrame = oldCFrame
								oldCFrame = nil

							end
						end
					end

				else

					break

				end
			end
		end)()	
	end


	local Tab = Window:MakeTab({
		Name = "Discord/Info",
		Icon = "rbxassetid://4483345998",
		PremiumOnly = false
	})

	Tab:AddButton({
		Name = "Join Discord",
		Callback = function()

			if syn then

				syn.request(
					{
						Url = "http://127.0.0.1:6463/rpc?v=1",
						Method = "POST",
						Headers = {
							["Content-Type"] = "application/json",
							["origin"] = "https://discord.com",
						},
						Body = game:GetService("HttpService"):JSONEncode(
						{
							["args"] = {
								["code"] = "KvM87FJHEj",
							},
							["cmd"] = "INVITE_BROWSER",
							["nonce"] = "."
						})
					})

			else

				setclipboard(tostring("https://discord.gg/KvM87FJHEj"))  

				OrionLib:MakeNotification({
					Name = "Skrillex Hub",
					Content = "Copied Link!",
					Image = "rbxassetid://4483345998",
					Time = 5
				})  

			end

		end    
	})

	Tab:AddParagraph("Info","Made by Skrillex#6300")

	OrionLib:Init()

	local vu = game:GetService("VirtualUser")
	game:GetService("Players").LocalPlayer.Idled:connect(function()
		vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
		wait(1)
		vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
	end)

	local target = nil
	coroutine.wrap(function()

		while task.wait(ShadowTrainWait) do

			if ShadowTrainFarm == true then

				if KillAura == true and isPremium == false then

					killauraToggle:Set(false)

				end

				if game.Workspace:FindFirstChild(player.Name .. "'s Shadow") then

					local shadow = game.Workspace:FindFirstChild(player.Name .. "'s Shadow")

					local args = {
						[1] = shadow,
						[2] = {
							["HitTime"] = 0,
							["Type"] = "Normal",
							["HitEffect"] = game:GetService("ReplicatedStorage").Resources.OtherEffects.NormalHitEffect2,
							["VictimCFrame"] = player.Character.Torso.CFrame,
							["HurtAnimation"] = game:GetService("ReplicatedStorage").Resources.Animations.HurtAnimations.Hurt2,
							["Velocity"] = Vector3.new(0.01, 0.01, 0.01) --[[Vector3]],
							["Sound"] = game:GetService("ReplicatedStorage").Resources.Sounds.Combat.NormalKick,
							["Damage"] = 1
						}
					}

					game:GetService("ReplicatedStorage").Remotes.Damage4:InvokeServer(unpack(args))

				else

					if not game:GetService("Workspace"):FindFirstChild(player.Name .. "' Shadow") then
						local args = {
							[1] = "Summon"
						}

						game:GetService("Players").LocalPlayer.PlayerGui._NCharge.Scripts.Summon:FireServer(unpack(args))

					end

				end

			end	

		end 
	end)()

	local count = 0
	while task.wait() do
		if isTeleporting == false then
			if autKey == true then
				local str1 = nil
				local str2 = nil

				for _, v in pairs(game.Players.LocalPlayer.PlayerGui:GetChildren()) do

					if v:FindFirstChild("Key1") then

						str1 = v.Key1

					end

					if v:FindFirstChild("Key2") then

						str2 = v.Key2

					end 
				end


				local newStr1, replaced = string.gsub(str1.Text, " ", " ")
				local evennewStr1, replaced1 = string.gsub(newStr1, "+", " ")
				local evennewStr11, replaced1 = string.gsub(evennewStr1, " ", "")
				local newStr2, replaced2 = string.gsub(str2.Text, " ", " ")
				local evennewStr2, replaced2 = string.gsub(newStr2, "+", " ")
				print(evennewStr11 .. " Key1")
				print(evennewStr2 .. " Key2")
				task.wait(keyPressSpeed)
				vim:SendKeyEvent(true, evennewStr11, false, game)
				task.wait(0.05)
				vim:SendKeyEvent(true, evennewStr2, false, game)
				count += 1
				if count >= 30 and count < 999 then


					count = 999

					local args = {
						[1] = "EndTraining"
					}

					game:GetService("ReplicatedStorage").RemoteEvents:FireServer(unpack(args))

					local args = {
						[1] = "KitchenActivated"
					}

					game:GetService("ReplicatedStorage").RemoteEvents:FireServer(unpack(args))
					game:GetService("ReplicatedStorage").RemoteEvents:FireServer(unpack(args))
					game:GetService("ReplicatedStorage").RemoteEvents:FireServer(unpack(args))
					game:GetService("ReplicatedStorage").RemoteEvents:FireServer(unpack(args))

					task.wait(1.5)

					local args = {
						[1] = "KitchenDeactivated"
					}

					game:GetService("ReplicatedStorage").RemoteEvents:FireServer(unpack(args))
					game:GetService("ReplicatedStorage").RemoteEvents:FireServer(unpack(args))
					game:GetService("ReplicatedStorage").RemoteEvents:FireServer(unpack(args))
					game:GetService("ReplicatedStorage").RemoteEvents:FireServer(unpack(args))
					game:GetService("ReplicatedStorage").RemoteEvents:FireServer(unpack(args))


					local args = {
						[1] = "StartTraining"
					}

					game:GetService("ReplicatedStorage").RemoteEvents:FireServer(unpack(args))


					count = 0

					task.wait()

				end
				task.wait(0.1)


			end

			if autMediate == true then

				for _, v in pairs(game.Workspace:GetChildren()) do
					if v.Name == "Part" and v:FindFirstChild("Sound") and not v:FindFirstChild("BillboardGui") and not v:FindFirstChild("alreadyClicked") then

						local tween = TweenService:Create(camera, tweenInfo, {CFrame = CFrame.new(camera.CFrame.Position, v.CFrame.Position)})
						tween:Play()
						task.wait(0.5)
						vim:SendKeyEvent(true, "Space", false, game)
						local alreadyClicked = Instance.new("BoolValue", v)
						alreadyClicked.Name = "alreadyClicked"

					end     
				end
			end

			if KillAura == true or PlayersKillAura == true then

				if ShadowTrainFarm == false then

					local success, err = pcall(function()


						for _, v in pairs(game.Workspace:GetChildren()) do

							if v:FindFirstChild("HumanoidRootPart") or v:FindFirstChild("Torso") then
								if v.Name ~= player.Name and v:FindFirstChild("Humanoid") and v:FindFirstChild("Humanoid").Health >= 0 then
									if (game.Players:FindFirstChild(v.Name) and PlayersKillAura == true) or (not game.Players:FindFirstChild(v.Name) and PlayersKillAura == false) then	
										local distance = (v:FindFirstChild("HumanoidRootPart").Position - player.Character.HumanoidRootPart.Position).magnitude
										if distance <= maxDistance then
											local args = {
												[1] = v,
												[2] = {
													["HitTime"] = 0,
													["Type"] = "Normal",
													["HitEffect"] = game:GetService("ReplicatedStorage").Resources.OtherEffects.NormalHitEffect2,
													["VictimCFrame"] = v.HumanoidRootPart.CFrame,
													["HurtAnimation"] = game:GetService("ReplicatedStorage").Resources.Animations.HurtAnimations.Hurt2,
													["Velocity"] = Vector3.new(0.01, 0.01, 0.01) --[[Vector3]],
													["Sound"] = game:GetService("ReplicatedStorage").Resources.Sounds.Combat.NormalKick,
													["Damage"] = 0
												}
											}

											game:GetService("ReplicatedStorage").Remotes.Damage4:InvokeServer(unpack(args))

										end
									end       
								end
							end
						end
					end)
					if err then

						OrionLib:MakeNotification({
							Name = "Skrillex Hub",
							Content = "Something gone wrong with ur kill aura restart the script",
							Image = "rbxassetid://4483345998",
							Time = 5
						}) 

						break
						
					elseif ShadowTrainFarm == true then
						
						killauraToggle:Set(false)
					

					end
				end
			end

			if InfStam == true then

				player.Data.Stamina.Value = player.Data.MaxStamina.Value

			end

			if InfKi == true then

				player.Data.Ki.Value = player.Data.MaxKi.Value

			end

			if FastPunch == true then

				player.Data.CombatSpeed.Value = PunchingSpeed

			end

			if autoDragonBalls == true then
				task.wait(1)
				if game:GetService("Workspace"):FindFirstChild("DragonBallLocatioionsa") and #game:GetService("Workspace"):FindFirstChild("DragonBallLocatioionsa"):GetChildren() >0 then 
					for _, v in pairs(game:GetService("Workspace").DragonBallLocatioionsa:GetChildren()) do
						if string.match(v.Name, " Star Ball") then
							for _, e in pairs(v:GetDescendants()) do
								if e:IsA("MeshPart") then
									game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = e.CFrame 

								end

								if e:IsA("ProximityPrompt") then
									if syn then
										fireproximityprompt(e)
									end	
								end 
							end

						end	
					end

				end
			end

			if isPremium and timer ~= nil then

				local scripttime=game.Workspace.DistributedGameTime
				local seconds = math.floor(scripttime%60)
				local minutes = math.floor(scripttime/60%60)
				local hours = math.floor(scripttime/3600)
				local tempo = string.format("%.0f:%.0f:%.0f", hours ,minutes, seconds)

				if minutes < 10 then

					local ttempo = string.format("%.0f", hours)
					tempo = ttempo .. ":" .. "0" .. math.floor(scripttime/60%60) .. ":" .. seconds
					print(tempo)

				end

				timer:Set(tempo)

				local success, err = pcall(function()

					if timeToNotify ~= "" then

						nextTimeNotifyAt:Set("Next notify: " .. timeToNotify)

						if tempo >= timeToNotify then

							timeToNotify = ""
							nextTimeNotifyAt:Set("0:00:00")

							OrionLib:MakeNotification({
								Name = "Skrillex Hub",
								Content = "Your Server Reached: " .. tempo .. "!",
								Image = "rbxassetid://4483345998",
								Time = 5
							}) 

							if dropdown3 == "Webhook" then

								Webhook("Your Server Reached: " .. tempo .. "!", nil)

							else

								local audio = Instance.new("Sound", game.Workspace)
								audio.SoundId = "rbxassetid://835068435"
								audio.Volume = 10
								audio:Play()

							end	
						end
					end
				end)

				if err then

					OrionLib:MakeNotification({
						Name = "Skrillex Hub",
						Content = err,
						Image = "rbxassetid://4483345998",
						Time = 5
					}) 

					break

				end

			end

		else

			break

		end
	end

end)
